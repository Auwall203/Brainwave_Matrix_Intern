# -*- coding: utf-8 -*-
"""Brainwave_Matrix_Intern

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1kqx31R3qwsXggb4-yfp1wTlRYQLsFkGx
"""

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

"""Loading the Dataset"""

# Load dataset ('supermakerket_sales.csv')
df = pd.read_csv('supermarket_sales.csv')

# Preview the dataset
print(df.head())

"""Explore and Cleaning the Data

Check for missing values, duplicates, and other inconsistencies.
"""

# Check for null values
print(df.isnull().sum())

# Check for duplicates
df.drop_duplicates(inplace=True)

# Data types
print(df.dtypes)

"""Descriptive of statistics"""

# Summary statistics
print(df.describe())

# Total sales per product line
product_sales = df.groupby('Product line')['Total'].sum()
print(product_sales)

"""1. Customer Demographics Analysis
sales by gender and customer type to understand demographic patterns.
"""

# Sales distribution by gender
gender_sales = df.groupby('Gender')['Total'].sum()

# Sales distribution by customer type
customer_type_sales = df.groupby('Customer type')['Total'].sum()

# Display the results
print(gender_sales)
print(customer_type_sales)

"""2. Sales Performance by Branch and City.
Analyze total sales for each branch and city, which may reveal performance differences based on location.
"""

# Sales by branch
branch_sales = df.groupby('Branch')['Total'].sum()

# Sales by city
city_sales = df.groupby('City')['Total'].sum()

# Display the results
print(branch_sales)
print(city_sales)

"""
3. Sales Trends by Date and Time of Day.

Analyze sales patterns over different dates and times of the day."""

# Convert 'Date' column to datetime format
df['Date'] = pd.to_datetime(df['Date'])

# Sales by day of the week
df['Day of Week'] = df['Date'].dt.day_name()
day_sales = df.groupby('Day of Week')['Total'].sum()

# Sales by hour of the day
df['Hour'] = pd.to_datetime(df['Time']).dt.hour
hour_sales = df.groupby('Hour')['Total'].sum()

# Display the results
print(day_sales)
print(hour_sales)

"""
4. Product Line Analysis.
This will include total sales, average price, and quantities sold per product line."""

# Total sales and average unit price by product line
product_line_sales = df.groupby('Product line')['Total'].sum()
average_price = df.groupby('Product line')['Unit price'].mean()
quantity_sold = df.groupby('Product line')['Quantity'].sum()

# Display the results
print(product_line_sales)
print(average_price)
print(quantity_sold)

"""
5. Payment Method Preferences,
understanding which payment methods are most commonly used by customers."""

# Frequency of each payment method
payment_method_counts = df['Payment'].value_counts()

# Display the result
print(payment_method_counts)

"""
6. Sales Performance Based on Rating.
Analyze average sales and frequency by rating score."""

# Sales distribution by rating
rating_sales = df.groupby('Rating')['Total'].mean()

# Display the result
print(rating_sales)

"""Customer Demographics (Gender and Customer Type)"""

import matplotlib.pyplot as plt
import seaborn as sns

# Set plot style
sns.set_theme(style="whitegrid")

# Gender Sales Distribution
plt.figure(figsize=(8, 6))
sns.barplot(x=gender_sales.index, y=gender_sales.values, palette="Blues")
plt.title("Sales Distribution by Gender")
plt.xlabel("Gender")
plt.ylabel("Total Sales")
plt.show()

# Customer Type Sales Distribution
plt.figure(figsize=(8, 6))
sns.barplot(x=customer_type_sales.index, y=customer_type_sales.values, palette="Greens")
plt.title("Sales Distribution by Customer Type")
plt.xlabel("Customer Type")
plt.ylabel("Total Sales")
plt.show()

"""
 Sales Performance by Branch and City"""

# Branch Sales Distribution
branch_sales = df.groupby('Branch')['Total'].sum()
plt.figure(figsize=(8, 6))
sns.barplot(x=branch_sales.index, y=branch_sales.values, palette="Purples")
plt.title("Sales Performance by Branch")
plt.xlabel("Branch")
plt.ylabel("Total Sales")
plt.show()

# City Sales Distribution
city_sales = df.groupby('City')['Total'].sum()
plt.figure(figsize=(8, 6))
sns.barplot(x=city_sales.index, y=city_sales.values, palette="Oranges")
plt.title("Sales Performance by City")
plt.xlabel("City")
plt.ylabel("Total Sales")
plt.show()

"""
Sales Trends by Day of the Week and Hour"""

# Sales by Day of the Week
day_sales = df.groupby('Day of Week')['Total'].sum()
plt.figure(figsize=(10, 6))
sns.barplot(x=day_sales.index, y=day_sales.values, palette="coolwarm")
plt.title("Sales by Day of the Week")
plt.xlabel("Day of the Week")
plt.ylabel("Total Sales")
plt.xticks(rotation=45)
plt.show()

# Sales by Hour of the Day
hour_sales = df.groupby('Hour')['Total'].sum()
plt.figure(figsize=(10, 6))
sns.lineplot(x=hour_sales.index, y=hour_sales.values, marker="o", color="b")
plt.title("Sales by Hour of the Day")
plt.xlabel("Hour")
plt.ylabel("Total Sales")
plt.grid()
plt.show()

"""
Product Line Analysis"""

# Product Line Sales
product_line_sales = df.groupby('Product line')['Total'].sum()
plt.figure(figsize=(10, 6))
sns.barplot(x=product_line_sales.index, y=product_line_sales.values, palette="Set2")
plt.title("Total Sales per Product Line")
plt.xlabel("Product Line")
plt.ylabel("Total Sales")
plt.xticks(rotation=45)
plt.show()

"""
Payment Method Preferences"""

# Payment Method Distribution
payment_method_counts = df['Payment'].value_counts()
plt.figure(figsize=(8, 6))
sns.barplot(x=payment_method_counts.index, y=payment_method_counts.values, palette="Set1")
plt.title("Preferred Payment Methods")
plt.xlabel("Payment Method")
plt.ylabel("Frequency")
plt.show()

"""
Sales Performance Based on Rating"""

# Rating vs Average Sales
rating_sales = df.groupby('Rating')['Total'].mean()
plt.figure(figsize=(10, 6))
sns.lineplot(x=rating_sales.index, y=rating_sales.values, marker="o", color="g")
plt.title("Average Sales by Customer Rating")
plt.xlabel("Rating")
plt.ylabel("Average Sales")
plt.grid()
plt.show()

"""

**Summary and Recommedations**

Based on the sales analysis, here are some strategic recommendations for optimizing performance:

1. Customer Demographics Insights
Female Customers: Since female customers contribute slightly more to sales, consider targeted marketing campaigns for female customers, such as loyalty programs or product bundles that cater specifically to their preferences.
Membership Program: With members showing higher spending than regular customers, focus on expanding the membership program. Highlight exclusive benefits like discounts, special promotions, and early access to products to convert more customers into members.
2. Branch and City Sales Performance
Branch Strategy: Identify high-performing branches and examine what specific factors contribute to their success. For lower-performing branches, assess if factors like product assortment, in-store experience, or staff training could be optimized.
City-Specific Marketing: Tailor marketing strategies to each cityâ€™s unique consumer behaviors and trends. For example, focus on citywide events or cultural influences that align with the customer preferences in each location.
3. Sales Trends by Day and Time
Day-Based Promotions: If certain days, like weekends, have higher sales, consider increasing inventory and staff during these times. For slower days, promote flash sales or limited-time offers to drive traffic and increase sales.
Peak Hour Adjustments: Use the insights from peak sales hours to adjust staffing and stock levels. Offering happy-hour discounts or special deals during off-peak hours may also help balance traffic throughout the day.
4. Product Line Optimization
Top-Selling Products: Focus on maintaining adequate stock levels for high-revenue product lines. Promote these product lines in customer communication and cross-sell related products.
Low-Performing Product Lines: Assess whether low-performing product lines could benefit from targeted discounts, improved display positioning, or a review of pricing strategies.
5. Payment Method Preferences
Preferred Payment Method: Since certain payment methods are more popular, consider offering exclusive discounts or reward points for those methods to encourage customers to shop more frequently. Additionally, providing a seamless experience with these payment options could enhance customer satisfaction.
6. Customer Rating Insights
Customer Experience Improvements: If ratings affect sales significantly, focus on collecting feedback for improvement. Invest in training for customer-facing employees to enhance service quality and consistently monitor satisfaction levels.

**Overall Strategy Recommendations**

1. Targeted Marketing Campaigns: Using demographic data, create more personalized marketing content to engage specific groups of customers. Gender-based or membership-driven campaigns could have a substantial impact.
2. Operational Efficiency: Use data-driven insights on sales trends by day and time to improve operational efficiency, from staffing to inventory management, maximizing revenue potential.
3. Continuous Data Analysis: Conduct ongoing analysis, regularly updating strategies based on the latest data trends to ensure the store stays aligned with changing customer behaviors."""